import os
import asyncio
from dotenv import load_dotenv

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, BotCommand
from telegram.ext import (
    Application, CommandHandler, MessageHandler, 
    filters, ContextTypes, CallbackQueryHandler,
    ConversationHandler
)
#new comm
# --- –ö–ª–∏–µ–Ω—Ç –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ ---
from telethon import TelegramClient, events

# --- –ù–∞—à–∏ –º–æ–¥—É–ª–∏ ---
from app.utils.channel_parser import convert_telethon_message_to_announcement, fetch_announcements_from_channel
from app.utils.announcement_processor import process_single_announcement
from app.core.perplexity import PerplexityProcessor
from app.utils.config import get_pricing_config, set_pricing_config
from app.commands.start import register_handlers as register_start_handlers, leave_request_entry_callback, handle_leave_request, LEAVE_REQUEST
from app.commands.chatid import chatid
from app.commands.admin import register_admin_handlers

# --- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ---
load_dotenv()

# --- –û–¢–õ–ê–î–ö–ê ---
print("\n--- –î–ï–ë–ê–ì: –ß–¢–ï–ù–ò–ï –ö–ê–ù–ê–õ–û–í ---")
raw_channels_str = os.getenv("TELEGRAM_CHANNEL", "–ü–ï–†–ï–ú–ï–ù–ù–ê–Ø TELEGRAM_CHANNEL –ù–ï –ù–ê–ô–î–ï–ù–ê")
print(f"1. –°—ã—Ä–∞—è —Å—Ç—Ä–æ–∫–∞ –∏–∑ .env: '{raw_channels_str}'")
parsed_channels_list = [channel.strip() for channel in raw_channels_str.split(',') if channel.strip()]
print(f"2. –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ –ø–∞—Ä—Å–∏–Ω–≥–∞: {parsed_channels_list}")
print("--- –ö–û–ù–ï–¶ –î–ï–ë–ê–ì–ê ---\n")
# --- –ö–û–ù–ï–¶ –û–¢–õ–ê–î–ö–ò ---

# Telethon
API_ID = os.getenv("TELEGRAM_API_ID")
API_HASH = os.getenv("TELEGRAM_API_HASH")
SESSION_NAME = "telegram_session"
# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–∞–Ω–∞–ª–æ–≤ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
SOURCE_CHANNELS_STR = os.getenv("TELEGRAM_CHANNEL", "")
SOURCE_CHANNELS = [channel.strip() for channel in SOURCE_CHANNELS_STR.split(',') if channel.strip()]

TELEGRAM_PHONE = os.getenv("TELEGRAM_PHONE")
TELEGRAM_PASSWORD = os.getenv("TELEGRAM_PASSWORD")

# Telegram Bot
BOT_TOKEN = os.getenv("BOT_TOKEN")
ADMIN_GROUP_ID = int(os.getenv("ADMIN_GROUP_ID"))
ADMIN_USER_IDS = [int(admin_id) for admin_id in os.getenv("ADMIN_USER_IDS", "").split(',') if admin_id]


# –û–±—â–∏–µ —Ä–µ—Å—É—Ä—Å—ã
PERPLEXITY_API_KEY = os.getenv("PERPLEXITY_API_KEY")
perplexity_processor = PerplexityProcessor(PERPLEXITY_API_KEY)
MARKUP_PERCENTAGE = get_pricing_config()

# --- –ö–ª–∏–µ–Ω—Ç Telethon –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è ---
client = TelegramClient(
    SESSION_NAME, 
    API_ID, 
    API_HASH,
    connection_retries=5,
    timeout=20
)

@client.on(events.NewMessage(chats=SOURCE_CHANNELS))
async def new_post_handler(event):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –∏–∑ –∫–∞–Ω–∞–ª–æ–≤-–¥–æ–Ω–æ—Ä–æ–≤."""
    source_channel_username = event.chat.username
    source_channel_url = f"https://t.me/{source_channel_username}"
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –ø–æ—Å—Ç –∏–∑ {source_channel_url}. –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É...")
    try:
        announcement = await convert_telethon_message_to_announcement(event.message)
        if announcement:
            await process_single_announcement(
                ann=announcement,
                perplexity_processor=perplexity_processor,
                source_channel=source_channel_url, # –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∫–∞–Ω–∞–ª
                markup_percentage=MARKUP_PERCENTAGE
            )
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ–≥–æ –ø–æ—Å—Ç–∞ {event.message.id} –∏–∑ –∫–∞–Ω–∞–ª–∞ {source_channel_url}: {e}")

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ (python-telegram-bot) ---
# (start –∏ chatid —Ç–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –≤ app/commands/)

async def post_init(application: Application):
    """–î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ PTB (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ Telethon)."""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    await application.bot.set_my_commands([
        BotCommand("start", "–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"),
        BotCommand("admin", "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"),
        BotCommand("chatid", "–£–∑–Ω–∞—Ç—å ID —á–∞—Ç–∞"),
        BotCommand("help", "–ü–æ–º–æ—â—å"),
    ])
    if not SOURCE_CHANNELS:
        print("‚ö†Ô∏è  –ö–∞–Ω–∞–ª—ã-–∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω—ã –≤ .env (TELEGRAM_CHANNEL). –ö–ª–∏–µ–Ω—Ç Telethon –Ω–µ –±—É–¥–µ—Ç –∑–∞–ø—É—â–µ–Ω.")
        return
    await client.start(phone=TELEGRAM_PHONE, password=TELEGRAM_PASSWORD)
    print("–ö–ª–∏–µ–Ω—Ç Telethon –¥–ª—è –ø—Ä–æ—Å–ª—É—à–∏–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –∑–∞–ø—É—â–µ–Ω.")
    print(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Å–ª—É—à–∞–µ—Ç –Ω–æ–≤—ã–µ –ø–æ—Å—Ç—ã –≤ –∫–∞–Ω–∞–ª–∞—Ö: {', '.join(SOURCE_CHANNELS)}")

async def post_shutdown(application: Application):
    """–î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞."""
    if client.is_connected():
        print("üîÑ –û—Ç–∫–ª—é—á–µ–Ω–∏–µ Telethon –∫–ª–∏–µ–Ω—Ç–∞...")
        await client.disconnect()
        print("‚úÖ Telethon –∫–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–µ–Ω.")

# --- –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∑–∞–ø—É—Å–∫ ---
def main():
    # –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Telegram Bot
    application = Application.builder().token(BOT_TOKEN).post_init(post_init).post_shutdown(post_shutdown).build()
    # –ü—Ä–æ–∫–∏–¥—ã–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –∫–æ–º–∞–Ω–¥
    application.bot_data['ADMIN_GROUP_ID'] = ADMIN_GROUP_ID
    application.bot_data['ADMIN_USER_IDS'] = ADMIN_USER_IDS
    application.bot_data['MARKUP_PERCENTAGE'] = MARKUP_PERCENTAGE
    application.bot_data['SOURCE_CHANNELS'] = SOURCE_CHANNELS
    application.bot_data['perplexity_processor'] = perplexity_processor
    application.bot_data['process_single_announcement'] = process_single_announcement

    # --- –ö–æ–º–∞–Ω–¥—ã ---
    register_start_handlers(application)
    register_admin_handlers(application)
    
    # /chatid –∫–æ–º–∞–Ω–¥–∞
    application.add_handler(CommandHandler("chatid", chatid))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
 
