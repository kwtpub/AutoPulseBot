version: '3.8'

services:
  telegram-bot:
    build: .
    container_name: telegram-auto-post-bot
    restart: unless-stopped
    volumes:
      - ./downloads:/app/downloads
      - ./temp:/app/temp
      - ./logs:/app/logs
      - ./.env:/app/.env:ro
      - ./config.ini:/app/config.ini:ro
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    networks:
      - bot-network
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (future use)
  redis:
    image: redis:7-alpine
    container_name: telegram-bot-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - bot-network
    profiles:
      - cache

  # Optional: PostgreSQL for production (future use)
  postgres:
    image: postgres:15-alpine
    container_name: telegram-bot-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: telegram_bot
      POSTGRES_USER: bot_user
      POSTGRES_PASSWORD: bot_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bot-network
    profiles:
      - production

networks:
  bot-network:
    driver: bridge

volumes:
  redis-data:
  postgres-data: 